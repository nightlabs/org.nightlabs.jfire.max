<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema 
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	targetNamespace="urn:jfire.org:processdefinition-extension_1_1"
	elementFormDefault="qualified"
	xmlns:extension="urn:jfire.org:processdefinition-extension_1_1"
>
	<xsd:annotation>
		<xsd:documentation xml:lang="en">
			this is a schema to define the process definition extension file used to
			extend the process definition JBPM file.
		</xsd:documentation>
	</xsd:annotation>

	<xsd:element name="process-definition-extension">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">
				The process definition document can contain only one start state node.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element name="start-state" type="extension:ExtensionNodeElement"/>
				<xsd:element name="node" type="extension:ExtensionNodeElement"/>
				<xsd:element name="state" type="extension:ExtensionNodeElement"/>
				<xsd:element name="end-state" type="extension:ExtensionNodeElement"/>
			</xsd:choice>
		<xsd:attribute name="name" type="xsd:string" use="required" />
		</xsd:complexType>
	</xsd:element>


	<xsd:complexType name="ExtensionNodeElement">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">
				Each node contains a I18I name, I18I Description, and a graphical icon.

				If a state definition is marked as publicState, it will be exposed
				to other organisations
				by storing it in both the OfferLocal and the Offer instance. If it is
				not public,
				it is only stored in the OfferLocal, it s true, if it shall be
				registered in the non-local instance and therefore published to
				business partners.
				The default value of 'publicState' should be false if not defined.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="name" type="extension:I18nText"/>
        	<xsd:element name="description" type="extension:I18nText"/>
			<xsd:element name="icon" type="extension:Icon"/>		
			<xsd:element name="transition" type="extension:ExtensionTransitionElement"/>
		</xsd:choice>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
		<xsd:attribute name="publicState" type="xsd:boolean" use="optional"/>
	</xsd:complexType>

	<xsd:complexType name="ExtensionTransitionElement">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">
				the UserExecutube Attribute define if the Transition node is executable
				The default value of 'userExecutable' should be true if not defined.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="name" type="extension:I18nText"/>
        	<xsd:element name="description" type="extension:I18nText"/>
			<xsd:element name="icon" type="extension:Icon"/>
		</xsd:choice>
		<xsd:attribute name="name" type="xsd:string" use="required" />
		<xsd:attribute name="userExecutable" type="xsd:boolean" use="optional" />
	</xsd:complexType>
	
	<xsd:complexType name="Icon" mixed="false">
		<xsd:attribute name="file" type="xsd:string" use="required" />
		<xsd:attribute name="size" use="optional"> <!-- Only temporarily optional! This will soon become required! Marco. -->
            <xsd:annotation>
            	<xsd:documentation>The size of the image. This is currently optional, but will soon become required!</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="8x8"></xsd:enumeration>
					<xsd:enumeration value="12x12"></xsd:enumeration>
					<xsd:enumeration value="16x16"></xsd:enumeration>
					<xsd:enumeration value="24x24"></xsd:enumeration>
					<xsd:enumeration value="75x70"></xsd:enumeration>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="I18nText" mixed="true">
    	<xsd:attribute name="language">
    		<xsd:simpleType>
    			<xsd:restriction base="xsd:string">
    				<xsd:pattern value="[a-z]{2,2}"></xsd:pattern>
    			</xsd:restriction>
    		</xsd:simpleType>
    	</xsd:attribute>
    </xsd:complexType>


	<xsd:simpleType name="SizeType">
		<xsd:restriction base="xsd:string"></xsd:restriction>
	</xsd:simpleType>
</xsd:schema>



