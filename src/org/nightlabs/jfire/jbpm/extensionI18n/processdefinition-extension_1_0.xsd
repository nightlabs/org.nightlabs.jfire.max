<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema 
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	targetNamespace="urn:jfire.org:processdefinition-extension_1_0"
	elementFormDefault="qualified">
	

	<xsd:annotation>
		<xsd:documentation xml:lang="en">
			this is a schema to define the process definition extension file used to
			extend the process definition JBPM file.
		</xsd:documentation>
	</xsd:annotation>

	<xsd:element name="description">
		<xsd:complexType>
			<xsd:attribute name="language" type="xsd:string" use="required">
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="icon">
		<xsd:complexType>
			<xsd:attribute name="file" type="xsd:string" use="required" />
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="name">
		<xsd:complexType>
			<xsd:attribute name="language" type="xsd:string" use="required">
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="transition">
	<xsd:annotation>
		<xsd:documentation xml:lang="en">
			the UserExecutube Attribute define if the Transition node is executable
			The default value of 'userExecutable' should be true if not defined.
		</xsd:documentation>
	</xsd:annotation>
		<xsd:complexType>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element ref="description" />
				<xsd:element ref="name" />
				<xsd:element ref="icon" maxOccurs="1"/>
			</xsd:choice>
			<xsd:attribute name="name" type="xsd:string" use="required" />			
			<xsd:attribute name="userExecutable" type="xsd:boolean" use="optional" />
		</xsd:complexType>
	</xsd:element>

	
	<xsd:element name="node">
	<xsd:annotation>
	<xsd:documentation xml:lang="en">
	 Each node contains a I18I name, I18I Description, and a graphical icon.
	
	 If a state definition is marked as publicState, it will be exposed to other organisations
	 by storing it in both the OfferLocal and the Offer instance. If it is not public,
	 it is only stored in the OfferLocal, it s true, if it shall be registered in the non-local instance and therefore published to business partners.
	 The default value of 'publicState' should be false if not defined.
	</xsd:documentation>
	</xsd:annotation>
		<xsd:complexType>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element ref="description" />
				<xsd:element ref="name" />
				<xsd:element ref="icon" maxOccurs="1"/>
				<xsd:element ref="transition" />
			</xsd:choice>
			<xsd:attribute name="name" type="xsd:string" use="required" />
			<xsd:attribute name="publicState" type="xsd:boolean" use="optional" />
		</xsd:complexType>
	</xsd:element>


	<xsd:element name="start-state">
		<xsd:complexType>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element ref="description" />
				<xsd:element ref="name" />
				<xsd:element ref="icon" maxOccurs="1"/>
				<xsd:element ref="transition" />
			</xsd:choice>
			<xsd:attribute name="name" type="xsd:string" use="required" />
			<xsd:attribute name="publicState" type="xsd:boolean" use="optional" />
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="state">
		<xsd:complexType>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element ref="description" />
				<xsd:element ref="name" />
				<xsd:element ref="transition" />
				<xsd:element ref="icon" maxOccurs="1"/>
			</xsd:choice>
			<xsd:attribute name="name" type="xsd:string" use="required" />
			<xsd:attribute name="publicState" type="xsd:boolean" use="optional" />
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="end-state">
		<xsd:complexType>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element ref="description" />
				<xsd:element ref="name" />
				<xsd:element ref="icon" maxOccurs="1"/>
			</xsd:choice>
			<xsd:attribute name="publicState" type="xsd:boolean" use="optional" />
			<xsd:attribute name="name" type="xsd:string" use="required" />
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="process-definition-extension">
	<xsd:annotation>
		<xsd:documentation xml:lang="en">
			the Process definition Document can contain only one start state node
		</xsd:documentation>
	</xsd:annotation>
		<xsd:complexType>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element ref="node" />
				<xsd:element ref="start-state" maxOccurs="1" />
				<xsd:element ref="state" />
				<xsd:element ref="end-state" />
			</xsd:choice>
			<xsd:attribute name="name" type="xsd:string" use="required" />
		</xsd:complexType>
	</xsd:element>


</xsd:schema>